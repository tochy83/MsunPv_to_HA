# Name : msunpv_scripts_2_2.yaml
# Scripts des commandes pour MsunPv en configuration 2_2

script:

  msunpv_s1_off: #Mode routage actif sortie 1
    alias: msunpv_s1_off
    sequence:
      - service: input_select.select_option
        data:
          option: |-
            {% if states('sensor.msunpv_cmd_s1') in ['1','5','9'] %}
              {{ states('sensor.msunpv_cmd_s1')|int -1 }}
            {% elif states('sensor.msunpv_cmd_s1') in ['2','6','10'] %}
              {{ states('sensor.msunpv_cmd_s1')|int -2 }}
            {% else %}
              {{ states('sensor.msunpv_cmd_s1')|int }}
            {% endif %}
        target:
          entity_id: input_select.msunpv_command_sortie_1
      - service: input_select.select_option
        data:
          option: "{{ states('sensor.msunpv_cmd_test') }}"
        target:
          entity_id: input_select.msunpv_command_test_routeur
      - service: script.msunpv_commande_routeur
        data: {}
    mode: single
    
  msunpv_s1_manuel: #Mode forçage sortie 1
    alias: msunpv_s1_manuel
    sequence:
      - service: input_select.select_option
        data:
          option: |-
            {% if states('sensor.msunpv_cmd_s1') in ['0','4','8'] %}
              {{ states('sensor.msunpv_cmd_s1')|int +1 }}
            {% elif states('sensor.msunpv_cmd_s1') in ['2','6','10'] %}
              {{ states('sensor.msunpv_cmd_s1')|int -1 }}
            {% else %}
              {{ states('sensor.msunpv_cmd_s1')|int }}
            {% endif %}
        target:
          entity_id: input_select.msunpv_command_sortie_1
      - service: input_select.select_option
        data:
          option: "{{ states('sensor.msunpv_cmd_test') }}"
        target:
          entity_id: input_select.msunpv_command_test_routeur
      - service: script.msunpv_commande_routeur
        data: {}
    mode: single
    
  msunpv_s1_auto: #Mode programmation horaire sortie 1
    alias: msunpv_s1_auto
    sequence:
      - service: input_select.select_option
        data:
          option: |-
            {% if states('sensor.msunpv_cmd_s1') in ['1','5','9'] %}
              {{ states('sensor.msunpv_cmd_s1')|int +1 }}
            {% elif states('sensor.msunpv_cmd_s1') in ['0','4','8'] %}
              {{ states('sensor.msunpv_cmd_s1')|int +2 }}
            {% else %}
              {{ states('sensor.msunpv_cmd_s1')|int }}
            {% endif %}
        target:
          entity_id: input_select.msunpv_command_sortie_1
      - service: input_select.select_option
        data:
          option: "{{ states('sensor.msunpv_cmd_test') }}"
        target:
          entity_id: input_select.msunpv_command_test_routeur
      - service: script.msunpv_commande_routeur
        data: {}
    mode: single

  msunpv_s2_off: #Mode routage actif sortie 2
    alias: msunpv_s2_off
    sequence:
      - service: input_select.select_option
        data:
          option: |-
            {% if states('sensor.msunpv_cmd_s1') in ['4','5','6'] %}
              {{ states('sensor.msunpv_cmd_s1')|int -4 }}
            {% elif states('sensor.msunpv_cmd_s1') in ['8','9','10'] %}
              {{ states('sensor.msunpv_cmd_s1')|int -8 }}
            {% else %}
              {{ states('sensor.msunpv_cmd_s1')|int }}
            {% endif %}
        target:
          entity_id: input_select.msunpv_command_sortie_1
      - service: input_select.select_option
        data:
          option: "{{ states('sensor.msunpv_cmd_test') }}"
        target:
          entity_id: input_select.msunpv_command_test_routeur
      - service: script.msunpv_commande_routeur
        data: {}
    mode: single
    
  msunpv_s2_manuel: #Mode forçage sortie 2
    alias: msunpv_s2_manuel
    sequence:
      - service: input_select.select_option
        data:
          option: |-
            {% if states('sensor.msunpv_cmd_s1') in ['0','1','2'] %}
              {{ states('sensor.msunpv_cmd_s1')|int +4 }}
            {% elif states('sensor.msunpv_cmd_s1') in ['8','9','10'] %}
              {{ states('sensor.msunpv_cmd_s1')|int -4 }}
            {% else %}
              {{ states('sensor.msunpv_cmd_s1')|int }}
            {% endif %}
        target:
          entity_id: input_select.msunpv_command_sortie_1
      - service: input_select.select_option
        data:
          option: "{{ states('sensor.msunpv_cmd_test') }}"
        target:
          entity_id: input_select.msunpv_command_test_routeur
      - service: script.msunpv_commande_routeur
        data: {}
    mode: single
    
  msunpv_s2_auto: #Mode programmation horaire sortie 2
    alias: msunpv_s2_auto
    sequence:
      - service: input_select.select_option
        data:
          option: |-
            {% if states('sensor.msunpv_cmd_s1') in ['4','5','6'] %}
              {{ states('sensor.msunpv_cmd_s1')|int +4 }}
            {% elif states('sensor.msunpv_cmd_s1') in ['0','1','2'] %}
              {{ states('sensor.msunpv_cmd_s1')|int +8 }}
            {% else %}
              {{ states('sensor.msunpv_cmd_s1')|int }}
            {% endif %}
        target:
          entity_id: input_select.msunpv_command_sortie_1
      - service: input_select.select_option
        data:
          option: "{{ states('sensor.msunpv_cmd_test') }}"
        target:
          entity_id: input_select.msunpv_command_test_routeur
      - service: script.msunpv_commande_routeur
        data: {}
    mode: single

  msunpv_routage_on_off: #Bascule entre routage et injection
    alias: msunpv_routage_on_off
    sequence:
      - service: input_select.select_option
        data:
          option: |-
            {% if states('sensor.msunpv_cmd_test') in ['1','4','8'] %}
              2
            {% else %}
              1
            {% endif %}
        target:
          entity_id: input_select.msunpv_command_test_routeur
      - service: input_select.select_option
        data:
          option: "{{ states('sensor.msunpv_cmd_s1') }}"
        target:
          entity_id: input_select.msunpv_command_sortie_1
      - service: script.msunpv_commande_routeur
        data: {}
    mode: single

  msunpv_commandes_routeur: #Envoi des commandes au MsunPv
    alias: msunpv_commande_routeur
    sequence:
      - service: shell_command.msunpv_commandes
        data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id: sensor.msunpv_xml
    mode: single
    