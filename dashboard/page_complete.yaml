# Depot HACS utilisés pour la page Production photovoltaique
#
# https://github.com/iantrich/config-template-card
# https://github.com/piitaya/lovelace-mushroom
# https://github.com/thomasloven/lovelace-card-mod
# https://github.com/thomasloven/lovelace-layout-card
# https://github.com/RomRider/apexcharts-card
# https://github.com/custom-cards/stack-in-card
# https://github.com/bramkragten/swipe-card
#
# script.msunpv_bouton_s2
# script.msunpv_bouton_routage
# script.msunpv_bouton_cumulus

  - title: Pv
    path: pv
    views: null
    type: custom:grid-layout
    layout:
      grid-template-columns: 100%
      grid-column-gap: 20px
      grid-template-areas: |
        "header"
        "messages"
        "."
      mediaquery:
        '(min-width: 1400px)':
          grid-template-columns: 33% 33%
          grid-template-areas: |
            "header header"
            "messages messages"
            ". ."
          place-content: center
    icon: mdi:solar-power-variant-outline
    badges: []
    cards:
      - type: custom:mushroom-chips-card
        chips:
          - type: back
          - type: template
            content: PRODUCTION PHOTOVOLTAIQUE
            double_tap_action:
              action: none
            tap_action:
              action: none
            hold_action:
              action: none
            card_mod:
              style: |
                ha-card {
                  background: none !important;
                  border: none;
                }
        view_layout:
          grid-area: header
      - type: conditional
        conditions:
          - entity: binary_sensor.alert_messages
            state: 'on'
        card:
          type: markdown
          content: >-
            {% if is_state("binary_sensor.bt_stuck", "on") %}
              <ha-alert alert-type="error">Le bluetooth ne repond plus !</ha-alert>
            {% endif %}

            {% if is_state("binary_sensor.d1mini_garage_detection_etat_portail",
            "on") %}
              <ha-alert alert-type="warning">Attention le portail est ouvert !</ha-alert>
            {% endif %}
        view_layout:
          grid-area: messages
      - type: vertical-stack
        cards:
          - type: custom:mod-card
            card:
              type: custom:mushroom-title-card
              title: ''
              subtitle: Relevés
            card_mod:
              style:
                mushroom-title-card$: |
                  .subtitle {
                    border-bottom: 1px solid var(--ha-card-border-color,var(--divider-color,#e0e0e0));
                    padding-bottom: 5px;
                  }
                  .header {
                    margin-bottom: -27px;
                  }
          - type: horizontal-stack
            cards:
              - type: custom:mushroom-template-card
                primary: ''
                secondary: '{{ states(''sensor.msunpv_powreso'')|round(0) }} W'
                icon: |-
                  {% if -1 < states('sensor.msunpv_powreso')|float(0) < 1 %}
                    mdi:transmission-tower
                  {% elif states('sensor.msunpv_powreso')|float(0) < 1 %}
                    mdi:transmission-tower-import
                  {% else %}
                    mdi:transmission-tower-export
                  {% endif %}
                icon_color: |-
                  {% if states('sensor.msunpv_powreso')|float(0) < 1 %}
                    light-green
                  {% else %}
                    deep-orange
                  {% endif %}
                layout: vertical
                badge_color: |-
                  {% if states('sensor.msunpv_powreso')|float(0) < 1 %}
                    amber
                  {% endif %}
                badge_icon: >-
                  {% if (states('sensor.msunpv_powreso')|float(0) < 1) and
                  (states('sensor.msunpv_powpv')|float(0) < 1) %}
                    mdi:weather-sunny
                  {% endif %}
                tap_action:
                  action: more-info
                hold_action:
                  action: none
                double_tap_action:
                  action: none
                entity: sensor.msunpv_powreso
              - type: custom:mushroom-template-card
                primary: ''
                secondary: |-
                  {% if states('sensor.msunpv_powpv')|float(0) < -5 %}
                   {{ states('sensor.msunpv_powpv')|round(0) *-1 }} W
                  {% else %}
                    0 W
                  {% endif %}
                icon: mdi:solar-power-variant-outline
                icon_color: |-
                  {% if states('sensor.msunpv_powpv')|float(0) < -5 %}
                   light-green
                  {% endif %}
                layout: vertical
                badge_icon: |-
                  {% if is_state('binary_sensor.msunpv_s2', "on") %}
                    mdi:electric-switch
                  {% elif states('sensor.msunpv_outbal')|float(0) > 0 %}
                    mdi:water-boiler
                  {% elif states('sensor.msunpv_powpv')|float(0) < -5 %}
                    mdi:weather-sunny
                  {% endif %}
                badge_color: >-
                  {% if (states('sensor.msunpv_powpv')|float(0) < -5) or
                  (states('sensor.msunpv_outbal')|float(0) > 0) or
                  is_state('binary_sensor.msunpv_s2', "on")%}
                    amber
                  {% endif %}
                tap_action:
                  action: more-info
                hold_action:
                  action: none
                double_tap_action:
                  action: none
                entity: sensor.msunpv_powpv
              - type: custom:mushroom-template-card
                primary: ''
                secondary: '{{ states(''sensor.msunpv_voltres'')|round(0) }} V'
                icon: mdi:sine-wave
                icon_color: |-
                  {% if 220 < states('sensor.msunpv_voltres')|float(0) < 250 %}
                    light-green
                  {% else %}
                    red
                  {% endif %}
                layout: vertical
                badge_color: ''
                entity: sensor.msunpv_voltres
                badge_icon: ''
                tap_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: ''
                secondary: |-
                  {% if states('sensor.msunpv_outbal')|float(0) > 0 %}
                    {{ states('sensor.msunpv_outbal')|float(0) /4 }} %
                  {% else %}
                    Off
                  {% endif %}
                icon: mdi:water-boiler
                icon_color: |-
                  {% if states('sensor.msunpv_outbal')|float(0) > 0 %}
                    amber
                  {% endif %}
                layout: vertical
                badge_icon: |-
                  {% if is_state('sensor.statut_cumulus', 'froid') %}
                    mdi:alert
                  {% else %}
                    mdi:check-bold
                  {% endif %}
                badge_color: |-
                  {% if is_state('sensor.statut_cumulus', 'chaud') %}
                    light-green
                  {% elif is_state('sensor.statut_cumulus', 'tiède') %}
                    orange
                  {% else %}
                    red
                  {% endif %}
                entity: sensor.msunpv_outbal
                tap_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: ''
                secondary: |-
                  {% if is_state('binary_sensor.msunpv_s2', 'on') %}
                    S2 {{ states('binary_sensor.msunpv_s2') }}
                  {% else %}
                    S2 {{ states('binary_sensor.msunpv_s2') }}
                  {% endif %}
                icon: mdi:electric-switch
                icon_color: |-
                  {% if is_state('binary_sensor.msunpv_s2', 'on') %}
                    amber
                  {% endif %}
                layout: vertical
                tap_action:
                  action: more-info
                entity: binary_sensor.msunpv_s2
                badge_color: ''
                badge_icon: ''
          - type: horizontal-stack
            cards:
              - type: custom:mushroom-template-card
                primary: |-
                  {% if (states('sensor.msunpv_enpv_j')|float(0) == 0) %}
                    {{ (states('sensor.msunpv_enpv_j')|float(0))|round(2) }} Wh
                  {% else %}  
                    {{ (states('sensor.msunpv_enpv_j')|float(0) *-1)|round(2) }} Wh
                  {% endif %}
                secondary: Production
                icon: mdi:solar-power-variant-outline
                icon_color: light-green
                entity: sensor.msunpv_enpv_j
                tap_action:
                  action: more-info
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - type: custom:mushroom-template-card
                primary: |-
                  {% if (states('sensor.msunpv_eninj')|float(0) == 0) %}
                    {{ (states('sensor.msunpv_eninj')|float(0))|round(2) }} Wh
                  {% else %}  
                    {{ (states('sensor.msunpv_eninj')|float(0) *-1)|round(2) }} Wh
                  {% endif %}
                secondary: Injection
                icon: mdi:transmission-tower-import
                icon_color: light-blue
                tap_action:
                  action: more-info
                hold_action:
                  action: none
                double_tap_action:
                  action: none
                entity: sensor.msunpv_eninj
          - type: horizontal-stack
            cards:
              - type: custom:mushroom-template-card
                primary: '{{ states(''sensor.msunpv_prod_consommee'')}} Wh'
                secondary: Conso. solaire
                icon: mdi:solar-power
                icon_color: amber
                entity: sensor.msunpv_prod_consommee
              - type: custom:mushroom-template-card
                primary: '{{ states(''sensor.msunpv_conso_totale'') }} Wh'
                secondary: Conso. totale
                icon: mdi:transmission-tower
                icon_color: purple
                entity: sensor.msunpv_conso_totale
                tap_action:
                  action: navigate
                  navigation_path: /dashboard-test/conso
          - type: custom:swipe-card
            parameters:
              spaceBetween: 8
              grabCursor: true
              scrollbar:
                hide: false
                draggable: true
                snapOnRelease: true
            cards:
              - type: custom:apexcharts-card
                apex_config:
                  chart:
                    height: 200px
                  stroke:
                    width: 1
                update_interval: 300s
                graph_span: 1d
                cache: true
                series:
                  - entity: sensor.msunpv_powreso
                    group_by:
                      func: max
                      duration: 300s
                    show:
                      legend_value: false
                  - entity: sensor.msunpv_powpv
                    group_by:
                      func: min
                      duration: 300s
                    show:
                      legend_value: false
              - type: custom:apexcharts-card
                apex_config:
                  chart:
                    height: 200px
                  stroke:
                    width: 1
                update_interval: 300s
                span:
                  end: day
                graph_span: 15d
                cache: true
                series:
                  - entity: sensor.energie_msunpv_enpv_j
                    type: column
                    name: Production
                    color: ffc107
                    float_precision: 2
                    group_by:
                      func: max
                      duration: 1d
                    statistics:
                      type: state
                    show:
                      legend_value: false
                  - entity: sensor.energie_msunpv_enconso
                    type: column
                    name: Consommation
                    color: 2196f3
                    float_precision: 2
                    group_by:
                      func: max
                      duration: 1d
                    statistics:
                      type: state
                    show:
                      legend_value: false
                  - entity: sensor.energie_msunpv_eninj
                    type: column
                    name: Injection
                    color: 8bc34a
                    invert: true
                    float_precision: 2
                    group_by:
                      func: max
                      duration: 1d
                    statistics:
                      type: state
                    show:
                      legend_value: false
          - type: custom:mod-card
            card:
              type: custom:mushroom-title-card
              title: ''
              subtitle: Commandes routeur
            card_mod:
              style:
                mushroom-title-card$: |
                  .subtitle {
                    border-bottom: 1px solid var(--ha-card-border-color,var(--divider-color,#e0e0e0));
                    padding-bottom: 5px;
                  }
                  .header {
                    margin-bottom: -27px;
                  }
          - type: custom:mushroom-chips-card
            chips:
              - type: spacer
              - type: template
                content: Cumulus
                icon: |-
                  {% if states('sensor.msunpv_cmd_test') in ['1'] %}
                    mdi:stop-circle-outline
                  {% elif states('sensor.msunpv_cmd_test') in ['4','8'] %}
                    mdi:power-on  
                  {% elif states('sensor.msunpv_cmd_s1') in ['0','4','8'] %}
                    mdi:power-off
                  {% elif states('sensor.msunpv_cmd_s1') in ['1','5','9'] %}
                    mdi:power-on
                  {% elif states('sensor.msunpv_cmd_s1') in ['2','6','10'] %}
                    mdi:clock-outline
                  {% endif %}
                icon_color: |-
                  {% if states('sensor.msunpv_cmd_test') in ['1'] %}
                    red
                  {% elif states('sensor.msunpv_cmd_test') in ['4','8'] %}
                    blue  
                  {% elif states('sensor.msunpv_cmd_s1') in ['0','4','8'] %}
                    disabled
                  {% elif states('sensor.msunpv_cmd_s1') in ['1','5','9'] %}
                    red
                  {% else %}
                    blue
                  {% endif %}
                tap_action:
                  action: none
                double_tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: script.msunpv_bouton_cumulus
                  target: {}
              - type: spacer
              - type: template
                content: |-
                  {% if states('sensor.msunpv_cmd_test') == '1' %}
                    Injection
                  {% elif states('sensor.msunpv_cmd_test') == '2' %}
                    Routage
                  {% else %}
                    Soutirage
                  {% endif %}
                icon: |-
                  {% if states('sensor.msunpv_cmd_test') == '1' %}
                    mdi:power-off
                  {% else %}
                    mdi:circle
                  {% endif %}
                icon_color: |-
                  {% if states('sensor.msunpv_cmd_test') == '1' %}
                    disabled
                  {% elif states('sensor.msunpv_cmd_test') == '2' %}
                    blue
                  {% else %}
                    red
                  {% endif %}
                tap_action:
                  action: none
                double_tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: script.msunpv_bouton_routage
                  target: {}
              - type: spacer
              - type: template
                content: Sortie 2
                icon: |-
                  {% if states('sensor.msunpv_cmd_test') in ['1'] %}
                    mdi:stop-circle-outline
                  {% elif states('sensor.msunpv_cmd_test') in ['4','8'] %}
                    mdi:power-on  
                  {% elif states('sensor.msunpv_cmd_s1') in ['0','1','2'] %}
                    mdi:power-off
                  {% elif states('sensor.msunpv_cmd_s1') in ['4','5','6'] %}
                    mdi:power-on
                  {% elif states('sensor.msunpv_cmd_s1') in ['8','9','10'] %}
                    mdi:clock-outline
                  {% endif %}
                icon_color: |-
                  {% if states('sensor.msunpv_cmd_test') in ['1'] %}
                    red
                  {% elif states('sensor.msunpv_cmd_test') in ['4','8'] %}
                    blue  
                  {% elif states('sensor.msunpv_cmd_s1') in ['0','1','2'] %}
                    disabled
                  {% elif states('sensor.msunpv_cmd_s1')  in ['4','5','6'] %}
                    red
                  {% else %}
                    blue
                  {% endif %}
                tap_action:
                  action: none
                double_tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: script.msunpv_bouton_s2
                  target: {}
              - type: spacer
            alignment: justify
          - type: custom:mod-card
            card:
              type: custom:mushroom-title-card
              title: ''
              subtitle: Appareils
            card_mod:
              style:
                mushroom-title-card$: |
                  .subtitle {
                    border-bottom: 1px solid var(--ha-card-border-color,var(--divider-color,#e0e0e0));
                    padding-bottom: 5px;
                  }
                  .header {
                    margin-bottom: -27px;
                  }
          - type: custom:mushroom-template-card
            primary: MsunPv
            secondary: >-
              Taux auto-consommation : {{
              states('sensor.msunpv_taux_autoconsommation') }} %
            icon: mdi:sun-compass
            icon_color: |-
              {% if is_state('sensor.msunpv_xml', "OK") %}
                light-green   
              {% else %}
                red
              {% endif %}
            entity: sensor.msunpv_taux_autoconsommation
            tap_action:
              action: url
              url_path: http://url_du_msunpv
            hold_action:
              action: more-info
            double_tap_action:
              action: none
            badge_icon: |-
              {% if not is_state('sensor.msunpv_xml', "OK") %}
                mdi:alert-circle-outline
              {% endif %}
            badge_color: |-
              {% if not is_state('sensor.msunpv_xml', "OK") %}
                red
              {% endif %}
          - type: custom:mushroom-template-card
            primary: APsystems Ecu-c
            secondary: ''
            icon: mdi:radioactive
            icon_color: |-
              {% if is_state('binary_sensor.ping_ecuc', 'on') %}
                orange
              {% endif %}
            tap_action:
              action: url
              url_path: http://url_locale_ecu
            hold_action:
              action: url
              url_path: >-
                https://url_apsystems_dashboard
            double_tap_action:
              action: none
            badge_icon: |-
              {% if not is_state('binary_sensor.ping_ecuc', 'on') %}
                mdi:alert-circle-outline
              {% endif %}
            badge_color: |-
              {% if not is_state('binary_sensor.ping_ecuc', 'on') %}
                red
              {% endif %}
      - type: vertical-stack
        cards:
          - type: custom:mod-card
            card:
              type: custom:mushroom-title-card
              title: ''
              subtitle: Infos complémentaires
            card_mod:
              style:
                mushroom-title-card$: |
                  .subtitle {
                    border-bottom: 1px solid var(--ha-card-border-color,var(--divider-color,#e0e0e0));
                    padding-bottom: 5px;
                  }
                  .header {
                    margin-bottom: -27px;
                  }
          - type: custom:mushroom-template-card
            primary: Suivi production
            secondary: Google sheets
            icon: mdi:google-spreadsheet
            icon_color: green
            tap_action:
              action: url
              url_path: >-
                https://url_googledoc
            hold_action:
              action: more-info
            double_tap_action:
              action: none
            badge_icon: |-
              {% if not is_state('binary_sensor.ping_ecuc', 'on') %}
                mdi:alert-circle-outline
              {% endif %}
            badge_color: |-
              {% if not is_state('binary_sensor.ping_ecuc', 'on') %}
                red
              {% endif %}
          - type: horizontal-stack
            cards:
              - type: custom:mushroom-template-card
                primary: Status Ds3-L
                secondary: ''
                icon: mdi:router-wireless
                icon_color: orange
                tap_action:
                  action: url
                  url_path: http://url_ecu_statuts
                hold_action:
                  action: none
                double_tap_action:
                  action: none
          - type: horizontal-stack
            cards:
              - type: custom:mushroom-template-card
                primary: MsunPv
                secondary: |-
                  {% if is_state('sensor.msunpv_xml', "OK") %}
                    Connecté
                  {% else %}
                    Déconnecté
                  {% endif %}
                icon: |-
                  {% if is_state('sensor.msunpv_xml', "OK") %}
                    mdi:check-network-outline   
                  {% else %}
                    mdi:network-off-outline
                  {% endif %}
                icon_color: |-
                  {% if is_state('sensor.msunpv_xml', "OK") %}
                    light-blue
                  {% else %}
                    red
                  {% endif %}
                tap_action:
                  action: more-info
                hold_action:
                  action: none
                double_tap_action:
                  action: none
                entity: sensor.msunpv_xml
              - type: custom:mushroom-template-card
                primary: APsystems Ecu-c
                secondary: |-
                  {% if is_state('binary_sensor.ping_ecuc', 'on') %}
                    Connecté
                  {% else %}
                    Déconnecté
                  {% endif %}
                icon: |-
                  {% if is_state('binary_sensor.ping_ecuc', 'on') %}
                    mdi:check-network-outline   
                  {% else %}
                    mdi:network-off-outline
                  {% endif %}
                icon_color: |-
                  {% if is_state('binary_sensor.ping_ecuc', 'on') %}
                    light-blue
                  {% else %}
                    red
                  {% endif %}
                tap_action:
                  action: more-info
                hold_action:
                  action: none
                double_tap_action:
                  action: none
                entity: binary_sensor.ping_ecuc
          - type: custom:mod-card
            card:
              type: custom:mushroom-title-card
              title: ''
              subtitle: Cumulus
            card_mod:
              style:
                mushroom-title-card$: |
                  .subtitle {
                    border-bottom: 1px solid var(--ha-card-border-color,var(--divider-color,#e0e0e0));
                    padding-bottom: 5px;
                  }
                  .header {
                    margin-bottom: -27px;
                  }
          - type: custom:config-template-card
            entities:
              - input_select.offset_jour_graph_routage
            variables:
              offset: |
                -states['input_select.offset_jour_graph_routage'].state +'d'
            card:
              type: custom:stack-in-card
              mode: vertical
              cards:
                - type: custom:apexcharts-card
                  card_mod:
                    style: |
                      ha-card {                    
                        border: none;
                      }  
                  apex_config:
                    chart:
                      height: 150px
                    stroke:
                      width: 1
                  yaxis:
                    - id: sensor.msunpv_outbal
                      max: 100
                      decimals: 0
                      apex_config:
                        tickAmount: 4
                    - id: binary_sensor.msunpv_s2
                      opposite: true
                      max: 1
                      decimals: 0
                      apex_config:
                        tickAmount: 1
                  experimental:
                    hidden_by_default: true
                  update_interval: 300s
                  span:
                    start: day
                    offset: '${offset === ''0d'' ? '''' : offset}'
                  graph_span: 24h
                  cache: true
                  series:
                    - entity: sensor.msunpv_outbal
                      yaxis_id: sensor.msunpv_outbal
                      transform: return x / 4;
                      fill_raw: last
                      group_by:
                        func: last
                        duration: 600s
                      type: column
                      show:
                        legend_value: false
                    - entity: binary_sensor.msunpv_s2
                      yaxis_id: binary_sensor.msunpv_s2
                      extend_to: now
                      name: Sortie 2
                      transform: 'return x === ''on'' ? 1 : 0;'
                      fill_raw: last
                      group_by:
                        func: last
                        duration: 600s
                      type: line
                      show:
                        legend_value: false
                        hidden_by_default: true
                - type: horizontal-stack
                  cards:
                    - type: custom:mushroom-chips-card
                      chips:
                        - type: spacer
                        - type: template
                          card_mod:
                            style: |
                              ha-card {
                                margin-top: -5px;
                                margin-bottom: 15px;
                              }                 
                          tap_action:
                            action: call-service
                            service: input_select.select_option
                            target:
                              entity_id: input_select.offset_jour_graph_routage
                            data:
                              option: '0'
                          content: Aujourd'hui
                          icon: mdi:calendar-filter-outline
                          icon_color: >-
                            {% if
                            states('input_select.offset_jour_graph_routage') ==
                            '0' %}
                              blue
                            {% endif %}
                        - type: spacer
                        - type: template
                          card_mod:
                            style: |
                              ha-card {
                                margin-top: -5px;
                                margin-bottom: 15px;
                              }              
                          tap_action:
                            action: call-service
                            service: input_select.select_option
                            target:
                              entity_id: input_select.offset_jour_graph_routage
                            data:
                              option: '1'
                          content: Hier
                          icon: mdi:calendar-filter-outline
                          icon_color: >-
                            {% if
                            states('input_select.offset_jour_graph_routage') ==
                            '1' %}
                              blue
                            {% endif %}              
                        - type: spacer
                        - type: template
                          card_mod:
                            style: |
                              ha-card {
                                margin-top: -5px;
                                margin-bottom: 15px;
                              }                 
                          tap_action:
                            action: call-service
                            service: input_select.select_option
                            target:
                              entity_id: input_select.offset_jour_graph_routage
                            data:
                              option: '2'
                          content: Avant-hier
                          icon: mdi:calendar-filter-outline
                          icon_color: >-
                            {% if
                            states('input_select.offset_jour_graph_routage') ==
                            '2' %}
                              blue
                            {% endif %}              
                        - type: spacer
                      alignment: center
          - type: custom:mushroom-template-card
            primary: Le cumulus est {{ states('sensor.statut_cumulus') }}
            secondary: >
              {% if (((as_timestamp(now()) -
              as_timestamp(states('input_text.last_chauffe_solaire_cumulus'))) /
              3600) | round(2)) < 1 %}
                Dernière chauffe complète il y'a {{((as_timestamp(now()) - as_timestamp(states('input_text.last_chauffe_solaire_cumulus'))) / 60) | round(0)}} minute(s)
              {% elif (((as_timestamp(now()) -
              as_timestamp(states('input_text.last_chauffe_solaire_cumulus'))) /
              3600) | round(2)) < 72 %}
                Dernière chauffe complète il y'a {{((as_timestamp(now()) - as_timestamp(states('input_text.last_chauffe_solaire_cumulus'))) / 3600) | round(0)}} heure(s)
              {% else %}
                Dernière chauffe complète il y'a {{((as_timestamp(now()) - as_timestamp(states('input_text.last_chauffe_solaire_cumulus'))) / 86400) | round(0)}} jour(s)
              {% endif %}
            multiline_secondary: true
            icon: mdi:water-boiler
            icon_color: |-
              {% if is_state('sensor.statut_cumulus', 'chaud') %}
                light-green
              {% elif is_state('sensor.statut_cumulus', 'tiède') %}
                orange
              {% else %}
                red
              {% endif %}
            badge_icon: ''
            badge_color: ''
            entity: sensor.statut_cumulus
            tap_action:
              action: more-info
          - type: custom:stack-in-card
            mode: vertical
            cards:
              - type: custom:mushroom-template-card
                card_mod:
                  style: |
                    ha-card {                    
                      border: none;
                      
                    }    
                primary: Programmation horaire cumulus
                icon: mdi:clock-outline
                icon_color: |-
                  {% if states('sensor.msunpv_cmd_s1') in ['2','6','10'] %}
                    light-green
                  {% endif %}     
                tap_action:
                  action: call-service
                  service: automation.trigger
                  target:
                    entity_id: >-
                      automation.msunpv_mise_a_jour_affichage_programmation_horaire_2
                  data:
                    skip_condition: true
                double_tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: script.msunpv_s1_auto
                  target: {}
              - type: custom:mushroom-template-card
                card_mod:
                  style: |
                    ha-card {                    
                      border: none;
                      margin-top: -35px;
                      text-align: center;
                    }  
                secondary: |-
                  {% if not is_state('sensor.msunpv_timerballon_count', '0')  %}
                    {% set timers = '' %}
                    {% set timers = timers+states('sensor.msunpv_timerballon_1')+', ' if not is_state('sensor.msunpv_timerballon_1', 'N/A') else timers %}
                    {% set timers = timers+states('sensor.msunpv_timerballon_2')+', ' if not is_state('sensor.msunpv_timerballon_2', 'N/A') else timers %}
                    {% set timers = timers+states('sensor.msunpv_timerballon_3')+', ' if not is_state('sensor.msunpv_timerballon_3', 'N/A') else timers %}
                    {% set timers = timers+states('sensor.msunpv_timerballon_4')+', ' if not is_state('sensor.msunpv_timerballon_4', 'N/A') else timers %}
                    De {{ timers[:-2] }}
                  {{ states('sensor.msunpv_timerballon_jours') }}
                  {% else %}
                    Aucune
                  {% endif %}
                tap_action:
                  action: call-service
                  service: automation.trigger
                  target:
                    entity_id: >-
                      automation.msunpv_mise_a_jour_affichage_programmation_horaire_2
                  data:
                    skip_condition: true
                double_tap_action:
                  action: none
                hold_action:
                  action: call-service
                  service: script.msunpv_s1_auto
                  target: {}
